library(tidyr)
# you could break that range of data into 6 discrete intervals with a bad color scheme
usa_sf() %>% mutate(pop_cut = cut_interval(pop_2014, n = 6)) %>%  ggplot() + geom_sf(aes(fill = pop_cut))
ggplot(data = usa_sf()) +geom_sf()
# you can show a map colored by the 2014 population with
ggplot(data = usa_sf()) + geom_sf(aes(fill = pop_2014))
# you could break that range of data into 6 discrete intervals with a bad color scheme
usa_sf() %>% mutate(pop_cut = cut_interval(pop_2014, n = 6)) %>%  ggplot() + geom_sf(aes(fill = pop_cut))
install.packages("tidyverse")
library(tidyverse)
# you could break that range of data into 6 discrete intervals with a bad color scheme
usa_sf() %>% mutate(pop_cut = cut_interval(pop_2014, n = 6)) %>%  ggplot() + geom_sf(aes(fill = pop_cut))
install.packages("magrittr")
install.packages("dplyr")
library(dplyr)
library(magrittr)
library(tidyverse)
install.packages("magrittr")
install.packages("dplyr")
# you could break that range of data into 6 discrete intervals with a bad color scheme
usa_sf() %>% mutate(pop_cut = cut_interval(pop_2014, n = 6)) %>%  ggplot() + geom_sf(aes(fill = pop_cut))
install.packages("tidyverse")
install.packages("magrittr")
install.packages("dplyr")
library(dplyr)
library(magrittr)
library(tidyverse)
library(sf)
install.packages("here")
library(here)
library(albersusa)
library(ggplot2)
us_state_populations <- read.table(file = "https://www.evl.uic.edu/aej/424/us_state_populations.csv",
sep = ",")
us_state_populations
colnames(us_state_populations)<- c("state","populations")
summary(us_state_populations$populations)
#    Min.  1st Qu.   Median     Mean  3rd Qu.     Max.
# 584153  1858120  4531566  6363963  6982500 38802500
us_state_populations[order(us_state_populations$populations),]
usa_sf()
ggplot(data = usa_sf()) +geom_sf()
# you can show a map colored by the 2014 population with
ggplot(data = usa_sf()) + geom_sf(aes(fill = pop_2014))
# you could break that range of data into 6 discrete intervals with a bad color scheme
usa_sf() %>% mutate(pop_cut = cut_interval(pop_2014, n = 6)) %>%  ggplot() + geom_sf(aes(fill = pop_cut))
# or if we add in the color brewer library
library(RColorBrewer)
# we can see the visualization with a nicer color scheme
usa_sf() %>% mutate(pop_cut = cut_interval(pop_2014, n = 6)) %>%  ggplot() + geom_sf(aes(fill = pop_cut)) + scale_fill_brewer(palette = "Blues")
# or break it into 6 discrete bins with roughly the same number of states in each bin
usa_sf() %>% mutate(pop_cut = cut_number(pop_2014, n = 6)) %>%  ggplot() + geom_sf(aes(fill = pop_cut)) + scale_fill_brewer(palette = "Greens")
knitr::opts_chunk$set(echo = TRUE)
install.packages("here")
install.packages("tidyverse")
install.packages("magrittr")
install.packages("dplyr")
library(albersusa)
library(ggplot2)
library(dplyr)
library(magrittr)
library(tidyverse)
library(sf)
library(here)
install.packages("here")
install.packages("tidyverse")
install.packages("magrittr")
install.packages("dplyr")
us_state_populations <- read.table(file = "https://www.evl.uic.edu/aej/424/us_state_populations.csv",
sep = ",")
us_state_populations
colnames(us_state_populations)<- c("state","populations")
summary(us_state_populations$populations)
#    Min.  1st Qu.   Median     Mean  3rd Qu.     Max.
# 584153  1858120  4531566  6363963  6982500 38802500
us_state_populations[order(us_state_populations$populations),]
usa_sf()
ggplot(data = usa_sf()) +geom_sf()
# you can show a map colored by the 2014 population with
ggplot(data = usa_sf()) + geom_sf(aes(fill = pop_2014))
# you could break that range of data into 6 discrete intervals with a bad color scheme
usa_sf() %>% mutate(pop_cut = cut_interval(pop_2014, n = 6)) %>%  ggplot() + geom_sf(aes(fill = pop_cut))
# or if we add in the color brewer library
library(RColorBrewer)
# we can see the visualization with a nicer color scheme
usa_sf() %>% mutate(pop_cut = cut_interval(pop_2014, n = 6)) %>%  ggplot() + geom_sf(aes(fill = pop_cut)) + scale_fill_brewer(palette = "Blues")
# or break it into 6 discrete bins with roughly the same number of states in each bin
usa_sf() %>% mutate(pop_cut = cut_number(pop_2014, n = 6)) %>%  ggplot() + geom_sf(aes(fill = pop_cut)) + scale_fill_brewer(palette = "Greens")
# 2
usa_sf() %>% mutate(pop_cut = cut_number(pop_2014, n = 2)) %>%  ggplot() + geom_sf(aes(fill = pop_cut)) + scale_fill_brewer(palette = "Greens")
# or break it into 6 discrete bins with roughly the same number of states in each bin
usa_sf() %>% mutate(pop_cut = cut_number(pop_2014, n = 6)) %>%  ggplot() + geom_sf(aes(fill = pop_cut)) + scale_fill_brewer(palette = "BuGn")
```{r}
# 2
usa_sf() %>% mutate(pop_cut = cut_number(pop_2014, n = 2)) %>%  ggplot() + geom_sf(aes(fill = pop_cut)) + scale_fill_brewer(palette = "BuGn")
# 2
usa_sf() %>% mutate(pop_cut = cut_number(pop_2014, n = 2)) %>%  ggplot() + geom_sf(aes(fill = pop_cut)) + scale_fill_brewer(palette = "BuGn")
# 3
usa_sf() %>% mutate(pop_cut = cut_number(pop_2014, n = 3)) %>%  ggplot() + geom_sf(aes(fill = pop_cut)) + scale_fill_brewer(palette = "BuGn")
# 4
usa_sf() %>% mutate(pop_cut = cut_number(pop_2014, n = 4)) %>%  ggplot() + geom_sf(aes(fill = pop_cut)) + scale_fill_brewer(palette = "BuGn")
# 5
usa_sf() %>% mutate(pop_cut = cut_number(pop_2014, n = 5)) %>%  ggplot() + geom_sf(aes(fill = pop_cut)) + scale_fill_brewer(palette = "BuGn")
# 6
usa_sf() %>% mutate(pop_cut = cut_number(pop_2014, n = 6)) %>%  ggplot() + geom_sf(aes(fill = pop_cut)) + scale_fill_brewer(palette = "BuGn")
us_state_populations <- read.table(file = "https://www.evl.uic.edu/aej/424/us_state_populations.csv",
sep = ",")
colnames(us_state_populations)<- c("state","populations")
sd(us_state_populations$populations)
summary(us_state_populations$populations)
knitr::opts_chunk$set(echo = TRUE)
install.packages("here")
install.packages("tidyverse")
install.packages("magrittr")
install.packages("dplyr")
library(albersusa)
library(ggplot2)
library(dplyr)
library(magrittr)
library(tidyverse)
library(sf)
library(here)
us_state_populations <- read.table(file = "https://www.evl.uic.edu/aej/424/us_state_populations.csv",
sep = ",")
colnames(us_state_populations)<- c("state","populations")
sd(us_state_populations$populations)
summary(us_state_populations$populations)
us_state_populations <- read.table(file = "https://www.evl.uic.edu/aej/424/us_state_populations.csv",
sep = ",")
colnames(us_state_populations)<- c("state","populations")
sd(us_state_populations$populations)
summary(us_state_populations$populations)
us_state_populations <- read.table(file = "https://www.evl.uic.edu/aej/424/us_state_populations.csv",
sep = ",")
colnames(us_state_populations)<- c("state","populations")
sd(us_state_populations$populations)
summary(us_state_populations$populations)
knitr::opts_chunk$set(echo = TRUE)
install.packages("here")
install.packages("tidyverse")
install.packages("magrittr")
install.packages("dplyr")
library(albersusa)
library(ggplot2)
library(dplyr)
library(magrittr)
library(tidyverse)
library(sf)
library(here)
us_state_populations <- read.table(file = "https://www.evl.uic.edu/aej/424/us_state_populations.csv",
sep = ",")
colnames(us_state_populations)<- c("state","populations")
sd(us_state_populations$populations)
summary(us_state_populations$populations)
usa_sf()
ggplot(data = usa_sf()) +geom_sf()
# you can show a map colored by the 2014 population with
ggplot(data = usa_sf()) + geom_sf(aes(fill = pop_2014))
# you could break that range of data into 6 discrete intervals with a bad color scheme
usa_sf() %>% mutate(pop_cut = cut_interval(pop_2014, n = 6)) %>%  ggplot() + geom_sf(aes(fill = pop_cut))
# or if we add in the color brewer library
library(RColorBrewer)
# we can see the visualization with a nicer color scheme
usa_sf() %>% mutate(pop_cut = cut_interval(pop_2014, n = 6)) %>%  ggplot() + geom_sf(aes(fill = pop_cut)) + scale_fill_brewer(palette = "Blues")
# or break it into 6 discrete bins with roughly the same number of states in each bin
usa_sf() %>% mutate(pop_cut = cut_number(pop_2014, n = 6)) %>%  ggplot() + geom_sf(aes(fill = pop_cut)) + scale_fill_brewer(palette = "Greens")
# 2
usa_sf() %>% mutate(pop_cut = cut_number(pop_2014, n = 2)) %>%  ggplot() + geom_sf(aes(fill = pop_cut)) + scale_fill_brewer(palette = "BuGn")
# 3
usa_sf() %>% mutate(pop_cut = cut_number(pop_2014, n = 3)) %>%  ggplot() + geom_sf(aes(fill = pop_cut)) + scale_fill_brewer(palette = "BuGn")
# 4
usa_sf() %>% mutate(pop_cut = cut_number(pop_2014, n = 4)) %>%  ggplot() + geom_sf(aes(fill = pop_cut)) + scale_fill_brewer(palette = "BuGn")
# 5
usa_sf() %>% mutate(pop_cut = cut_number(pop_2014, n = 5)) %>%  ggplot() + geom_sf(aes(fill = pop_cut)) + scale_fill_brewer(palette = "BuGn")
# 6
usa_sf() %>% mutate(pop_cut = cut_number(pop_2014, n = 6)) %>%  ggplot() + geom_sf(aes(fill = pop_cut)) + scale_fill_brewer(palette = "BuGn")
sd(us_state_populations$populations)
us_state_populations <- read.table(file = "https://www.evl.uic.edu/aej/424/us_state_populations.csv",
sep = ",")
colnames(us_state_populations)<- c("state","populations")
sd(us_state_populations$populations)
summary(us_state_populations$populations)
sd(us_state_populations$populations)
summary(us_state_populations$populations)
ggplot(data = us_state_populations)
ggplot(data = us_state_populations)+
labs(x="State", y = "Populations") +
geom_bar(stat="identity", fill="steelblue") + scale_y_continuous()
ggplot(data = us_state_populations, aes(x=us_state_populations$state, y=us_state_populations$populations))+
labs(x="State", y = "Populations") +
geom_bar(stat="identity", fill="steelblue") + scale_y_continuous()
ggplot(data = us_state_populations, aes(x=state, y=populations))+
labs(x="State", y = "Populations") +
geom_bar(stat="identity", fill="steelblue") + scale_y_continuous()
ggplot(data = us_state_populations[order(us_state_populations$populations),], aes(x=state, y=populations))+
labs(x="State", y = "Populations") +
geom_bar(stat="identity", fill="steelblue") + scale_y_continuous()
us_state_populations<- us_state_populations[order(us_state_populations$populations),]
us_state_populations<- us_state_populations[order(us_state_populations$populations),]
ggplot(data = us_state_populations, aes(x=state, y=populations))+
labs(x="State", y = "Populations") +
geom_bar(stat="identity", fill="steelblue") + scale_y_continuous()
ggplot(data = us_state_populations, aes(x=reorde(state,-value), y=populations))+
labs(x="State", y = "Populations") +
geom_bar(stat="identity", fill="steelblue") + scale_y_continuous()
ggplot(data = us_state_populations, aes(x=reorder(state,-value), y=populations))+
labs(x="State", y = "Populations") +
geom_bar(stat="identity", fill="steelblue") + scale_y_continuous()
ggplot(data = us_state_populations, aes(x=reorder(state,-state), y=populations))+
labs(x="State", y = "Populations") +
geom_bar(stat="identity", fill="steelblue") + scale_y_continuous()
ggplot(data = us_state_populations, aes(x=reorder(us_state_populations,-state), y=populations))+
labs(x="State", y = "Populations") +
geom_bar(stat="identity", fill="steelblue") + scale_y_continuous()
ggplot(data = us_state_populations, aes(x=reorder(state,-populations), y=populations))+
labs(x="State", y = "Populations") +
geom_bar(stat="identity", fill="steelblue") + scale_y_continuous()
us_state_populations <- read.table(file = "https://www.evl.uic.edu/aej/424/us_state_populations.csv",
sep = ",")
colnames(us_state_populations)<- c("state","populations")
sd(us_state_populations$populations)
summary(us_state_populations$populations)
sd(us_state_populations$populations)
summary(us_state_populations$populations)
sd(us_state_populations$populations)
summary(us_state_populations$populations)
ggplot(data = us_state_populations, aes(x=reorder(state,-populations), y=populations))+
labs(x="State", y = "Populations") +
geom_bar(stat="identity", fill="steelblue")
us_state_populations[order(us_state_populations$populations),]
# 6
usa_sf() %>% mutate(pop_cut = cut_number(pop_2014, n = 10)) %>%  ggplot() + geom_sf(aes(fill = pop_cut)) + scale_fill_brewer(palette = "BuGn")
# 6
usa_sf() %>% mutate(pop_cut = cut_number(pop_2014, n = 9)) %>%  ggplot() + geom_sf(aes(fill = pop_cut)) + scale_fill_brewer(palette = "BuGn")
6
ggplot(data = us_state_populations, aes(x=reorder(state,-populations), y=populations))+
labs(x="State", y = "Populations") +
geom_bar(stat="identity", fill="steelblue")
abline(h = 1858120, col = "darkgreen")
ggplot(data = us_state_populations, aes(x=reorder(state,-populations), y=populations))+
labs(x="State", y = "Populations") +
geom_bar(stat="identity", fill="steelblue")+
geom_hline(yintercept=1858120)
quantile(us_state_populations$populations)
ggplot(data = us_state_populations, aes(x=reorder(state,-populations), y=populations))+
labs(x="State", y = "Populations") +
geom_bar(stat="identity", fill="steelblue")+
geom_hline(yintercept=1858120) +
geom_hline(yintercept=4531567) +
geom_hline(yintercept=6982500)
quantile(us_state_populations$populations)
quantile(us_state_populations$populations)
ggplot(data = us_state_populations, aes(x=reorder(state,-populations), y=populations))+
labs(x="State", y = "Populations") +
geom_bar(stat="identity", fill="steelblue")+
geom_hline(yintercept=1858120) +
geom_hline(yintercept=4531567) +
geom_hline(yintercept=6982500)
ggplot(data = us_state_populations, aes(x=reorder(state,-populations), y=populations))+
labs(x="State", y = "Populations") +
geom_bar(stat="identity", fill="steelblue")+
geom_hline(xintercept=1858120) +
geom_hline(yintercept=4531567) +
geom_hline(yintercept=6982500)
y
quantile(us_state_populations$populations)
ggplot(data = us_state_populations, aes(x=reorder(state,-populations), y=populations))+
labs(x="State", y = "Populations") +
geom_bar(stat="identity", fill="steelblue")+
geom_hline(yintercept=1858120) +
geom_hline(yintercept=4531567) +
geom_hline(yintercept=6982500)
# 6
usa_sf() %>% mutate(pop_cut = cut_number(pop_2014, n = 6)) %>%  ggplot() + geom_sf(aes(fill = pop_cut)) + scale_fill_brewer(palette = "BuGn")
## Natural Breaks
```{r}
ggplot(data = us_state_populations, aes(x=state, y=populations))+
labs(x="State", y = "Populations") +
geom_bar(stat="identity", fill="steelblue")+
geom_hline(yintercept=1858120) +
geom_hline(yintercept=4531567) +
geom_hline(yintercept=6982500)
ggplot(data = us_state_populations, aes(x=state, y=populations))+
labs(x="State", y = "Populations") +
geom_bar(stat="identity", fill="steelblue")+
ggplot(data = us_state_populations, aes(x=state, y=populations))+
labs(x="State", y = "Populations") +
geom_bar(stat="identity", fill="steelblue")
quantile(us_state_populations$populations)
ggplot(data = us_state_populations, aes(x=state,-populations), y=populations))+
quantile(us_state_populations$populations)
ggplot(data = us_state_populations, aes(x=(state,-populations), y=populations))+
quantile(us_state_populations$populations)
ggplot(data = us_state_populations, aes(x=reorder(state,-populations), y=populations))+
labs(x="State", y = "Populations") +
geom_bar(stat="identity", fill="steelblue")
ggplot(data = us_state_populations, aes(x=state, y=populations))+
labs(x="State", y = "Populations") +
geom_bar(stat="identity", fill="steelblue")
ggplot(data = us_state_populations, aes(x=reorder(state,-populations), y=populations))+
labs(x="State", y = "Populations") +
geom_bar(stat="identity", fill="steelblue")
ggplot(data = us_state_populations, aes(x=state, y=populations))+
labs(x="State", y = "Populations") +
geom_bar(stat="identity", fill="steelblue")
rgeom(n = 5, prob = 2)
rgeom(n = 5, prob = 0.2)
2^seq(0,5,by=1)
584153*2^seq(0,5,by=1)
c(584153*2^seq(0,5,by=1))
geometric_seq <- c(584153*3^seq(0,5,by=1))
geometric_seq <-
c(584153*3^seq(0,5,by=1))
c(584153*3^seq(0,5,by=1))
geometric_seq <- c(584153*2^seq(0,5,by=1))
geometric_seq <- c(584153*2^seq(0,4,by=1))
geometric_seq <- c(584153*2^seq(0,4,by=1))
ggplot(data = us_state_populations, aes(x=reorder(state,-populations), y=populations))+
labs(x="State", y = "Populations") +
geom_bar(stat="identity", fill="steelblue")+
geom_hline(yintercept=geometric_seq[1]) +
geom_hline(yintercept=geometric_seq[2]) +
geom_hline(yintercept=geometric_seq[3]) +
geom_hline(yintercept=geometric_seq[4]) +
geom_hline(yintercept=geometric_seq[5]) +
geometric_seq <- c(584153*2^seq(0,4,by=1))
ggplot(data = us_state_populations, aes(x=reorder(state,-populations), y=populations))+
labs(x="State", y = "Populations") +
geom_bar(stat="identity", fill="steelblue")+
geom_hline(yintercept=geometric_seq[1]) +
geom_hline(yintercept=geometric_seq[2]) +
geom_hline(yintercept=geometric_seq[3]) +
geom_hline(yintercept=geometric_seq[4]) +
geom_hline(yintercept=geometric_seq[5])
geometric_seq <- c(584153*3^seq(0,4,by=1))
ggplot(data = us_state_populations, aes(x=reorder(state,-populations), y=populations))+
labs(x="State", y = "Populations") +
geom_bar(stat="identity", fill="steelblue")+
geom_hline(yintercept=geometric_seq[1]) +
geom_hline(yintercept=geometric_seq[2]) +
geom_hline(yintercept=geometric_seq[3]) +
geom_hline(yintercept=geometric_seq[4]) +
geom_hline(yintercept=geometric_seq[5])
geometric_seq <- c(584153*2^seq(0,4,by=1))
ggplot(data = us_state_populations, aes(x=reorder(state,-populations), y=populations))+
labs(x="State", y = "Populations") +
geom_bar(stat="identity", fill="steelblue")+
geom_hline(yintercept=geometric_seq[1]) +
geom_hline(yintercept=geometric_seq[2]) +
geom_hline(yintercept=geometric_seq[3]) +
geom_hline(yintercept=geometric_seq[4]) +
geom_hline(yintercept=geometric_seq[5])
ggplot(data = us_state_populations, aes(x=reorder(state,-populations), y=populations))+
labs(x="State", y = "Populations") +
geom_bar(stat="identity", fill="steelblue")+
geom_hline(yintercept=geometric_seq[1]) +
geom_hline(yintercept=geometric_seq[2]) +
geom_hline(yintercept=geometric_seq[3]) +
geom_hline(yintercept=geometric_seq[4]) +
geom_hline(yintercept=geometric_seq[5]) +
geom_hline(yintercept=geometric_seq[6])
geometric_seq <- c(584153*2^seq(0,5,by=1))
ggplot(data = us_state_populations, aes(x=reorder(state,-populations), y=populations))+
labs(x="State", y = "Populations") +
geom_bar(stat="identity", fill="steelblue")+
geom_hline(yintercept=geometric_seq[1]) +
geom_hline(yintercept=geometric_seq[2]) +
geom_hline(yintercept=geometric_seq[3]) +
geom_hline(yintercept=geometric_seq[4]) +
geom_hline(yintercept=geometric_seq[5]) +
geom_hline(yintercept=geometric_seq[6])
geometric_seq <- c(min(us_state_populations$populations)*2^seq(0,5,by=1))
geometric_seq
ggplot(data = us_state_populations, aes(x=reorder(state,-populations), y=populations))+
labs(x="State", y = "Populations") +
geom_bar(stat="identity", fill="steelblue")+
geom_hline(yintercept=geometric_seq[1]) +
geom_hline(yintercept=geometric_seq[2]) +
geom_hline(yintercept=geometric_seq[3]) +
geom_hline(yintercept=geometric_seq[4]) +
geom_hline(yintercept=geometric_seq[5]) +
geom_hline(yintercept=geometric_seq[6])
summary(us_state_populations$populations)
us_state_populations <- read.table(file = "https://www.evl.uic.edu/aej/424/us_state_populations.csv",
sep = ",")
colnames(us_state_populations)<- c("state","populations")
sd(us_state_populations$populations)
summary(us_state_populations$populations)
intervals = (max(us_state_populations$populations)-min(us_state_populations$populations))/5
equal_seq <- c(seq(min(us_state_populations$populations),5,by=intervals))
intervals <- (max(us_state_populations$populations)-min(us_state_populations$populations))/5
equal_seq <- c(seq(min(us_state_populations$populations),5,by=intervals))
intervals
equal_seq <- c(seq(min(us_state_populations$populations),5,by=7643669.4))
equal_seq <- c(seq(min(us_state_populations$populations),5,by=7643669))
intervals <- (max(us_state_populations$populations)-min(us_state_populations$populations))/5
equal_seq <- c(seq(min(us_state_populations$populations),max(us_state_populations$populations),by=intervals))
equal_seq
ggplot(data = us_state_populations, aes(x=reorder(state,-populations), y=populations))+
labs(x="State", y = "Populations") +
geom_bar(stat="identity", fill="steelblue")+
geom_hline(yintercept=equal_seq[1]) +
geom_hline(yintercept=equal_seq[2]) +
geom_hline(yintercept=equal_seq[3]) +
geom_hline(yintercept=equal_seq[4]) +
geom_hline(yintercept=equal_seq[5]) +
geom_hline(yintercept=equal_seq[6])
equal_seq <- c(seq(min(us_state_populations$populations),max(us_state_populations$populations)-intervals,by=intervals))
intervals <- (max(us_state_populations$populations)-min(us_state_populations$populations))/5
equal_seq <- c(seq(min(us_state_populations$populations),max(us_state_populations$populations)-intervals,by=intervals))
equal_seq
ggplot(data = us_state_populations, aes(x=reorder(state,-populations), y=populations))+
labs(x="State", y = "Populations") +
geom_bar(stat="identity", fill="steelblue")+
geom_hline(yintercept=equal_seq[1]) +
geom_hline(yintercept=equal_seq[2]) +
geom_hline(yintercept=equal_seq[3]) +
geom_hline(yintercept=equal_seq[4]) +
geom_hline(yintercept=equal_seq[5]) +
geom_hline(yintercept=equal_seq[6])
ggplot(data = us_state_populations, aes(x=reorder(state,-populations), y=populations))+
labs(x="State", y = "Populations") +
geom_bar(stat="identity", fill="steelblue")+
geom_hline(yintercept=equal_seq[1]) +
geom_hline(yintercept=equal_seq[2]) +
geom_hline(yintercept=equal_seq[3]) +
geom_hline(yintercept=equal_seq[4]) +
geom_hline(yintercept=equal_seq[5])
intervals <- (max(us_state_populations$populations)-min(us_state_populations$populations))/5
equal_seq <- c(seq(min(us_state_populations$populations),max(us_state_populations$populations)-intervals,by=intervals))
equal_seq
ggplot(data = us_state_populations, aes(x=reorder(state,-populations), y=populations))+
labs(x="State", y = "Populations") +
geom_bar(stat="identity", fill="steelblue")+
geom_hline(yintercept=equal_seq[1]) +
geom_hline(yintercept=equal_seq[2]) +
geom_hline(yintercept=equal_seq[3]) +
geom_hline(yintercept=equal_seq[4]) +
geom_hline(yintercept=equal_seq[5])
intervals <- (max(us_state_populations$populations)-min(us_state_populations$populations))/6
equal_seq <- c(seq(min(us_state_populations$populations),max(us_state_populations$populations)-intervals,by=intervals))
equal_seq
ggplot(data = us_state_populations, aes(x=reorder(state,-populations), y=populations))+
labs(x="State", y = "Populations") +
geom_bar(stat="identity", fill="steelblue")+
geom_hline(yintercept=equal_seq[2]) +
geom_hline(yintercept=equal_seq[3]) +
geom_hline(yintercept=equal_seq[4]) +
geom_hline(yintercept=equal_seq[5])
intervals <- (max(us_state_populations$populations)-min(us_state_populations$populations))/6
equal_seq <- c(seq(min(us_state_populations$populations),max(us_state_populations$populations)-intervals,by=intervals))
equal_seq
ggplot(data = us_state_populations, aes(x=reorder(state,-populations), y=populations))+
labs(x="State", y = "Populations") +
geom_bar(stat="identity", fill="steelblue")+
geom_hline(yintercept=equal_seq[2]) +
geom_hline(yintercept=equal_seq[3]) +
geom_hline(yintercept=equal_seq[4]) +
geom_hline(yintercept=equal_seq[5]) +
geom_hline(yintercept=equal_seq[6])
# 5
usa_sf() %>% mutate(pop_cut = cut_number(pop_2014, n = 5)) %>%  ggplot() + geom_sf(aes(fill = pop_cut)) + scale_fill_brewer(palette = "Green")
# 3
usa_sf() %>% mutate(pop_cut = cut_number(pop_2014, n = 3)) %>%  ggplot() + geom_sf(aes(fill = pop_cut)) + scale_fill_brewer(palette = "Green")
# 4
usa_sf() %>% mutate(pop_cut = cut_number(pop_2014, n = 4)) %>%  ggplot() + geom_sf(aes(fill = pop_cut)) + scale_fill_brewer(palette = "Green")
# 6
usa_sf() %>% mutate(pop_cut = cut_number(pop_2014, n = 6)) %>%  ggplot() + geom_sf(aes(fill = pop_cut)) + scale_fill_brewer(palette = "Green")
# 4
usa_sf() %>% mutate(pop_cut = cut_number(pop_2014, n = 4)) %>%  ggplot() + geom_sf(aes(fill = pop_cut)) + scale_fill_brewer(palette = "BuGn")
# 5
usa_sf() %>% mutate(pop_cut = cut_number(pop_2014, n = 5)) %>%  ggplot() + geom_sf(aes(fill = pop_cut)) + scale_fill_brewer(palette = "BuGn")
# 6
usa_sf() %>% mutate(pop_cut = cut_number(pop_2014, n = 6)) %>%  ggplot() + geom_sf(aes(fill = pop_cut)) + scale_fill_brewer(palette = "BuGn")
source('~/.active-rstudio-document', echo=TRUE)
shiny::runApp('D:/ahando2/classes/SPRING 2022/CS 424/Project/Project 2/SubwayLarge')
shiny::runApp('D:/ahando2/classes/SPRING 2022/CS 424/Project/Project 2/SubwayLarge')
setwd("C:/Users/roche/Classes/CS 424/Project 3")
CommAreas <- read_delim("CommAreas.tsv",
"\t", escape_double = FALSE, trim_ws = TRUE)
library(readr)
CommAreas <- read_delim("CommAreas.tsv",
"\t", escape_double = FALSE, trim_ws = TRUE)
CommAreas$community <- CommAreas$`COMMUNITY`
CommAreas$area_id <- CommAreas$`AREA_NUMBE`
CommAreas <- CommAreas[,c("the_geom","community","area_id")]
gsub("MULTIPOLYGON ", "", CommAreas[1,]$the_geom)
CommAreas <- CommAreas[,c("community","area_id")]
write.table(
CommAreas, file=file.path(paste(dir,"/BigYellowTaxi/CommAreas.tsv",sep="")), quote=FALSE, sep='\t', row.names = FALSE
)
write.table(
CommAreas, file=file.path(paste(dir,"BigYellowTaxi/CommAreas.tsv",sep="")), quote=FALSE, sep='\t', row.names = FALSE
)
write.table(
CommAreas, file=file.path(paste(dir,"/BigYellowTaxi/CommAreas.tsv",sep="")), quote=FALSE, sep='\t', row.names = FALSE
)
setwd("C:/Users/roche/Classes/CS 424/Project 3")
write.table(
CommAreas, file=file.path(paste(dir,"/BigYellowTaxi/CommAreas.tsv",sep="")), quote=FALSE, sep='\t', row.names = FALSE
)
dir <- getwd()
write.table(
CommAreas, file=file.path(paste(dir,"/BigYellowTaxi/CommAreas.tsv",sep="")), quote=FALSE, sep='\t', row.names = FALSE
)
data_community <- lapply("CommAreas.tsv", read.delim)
data_community <- do.call(rbind, data_community)
setwd("C:/Users/roche/Classes/CS 424/Project 3/BigYellowTaxi")
data_community <- lapply("CommAreas.tsv", read.delim)
data_community <- do.call(rbind, data_community)
# get all of the tsv files in the same directory
geo_counties <- rgdal::readOGR("Boundaries - Community Areas (current).geojson")
